version: '3.5'

x-services:
  base: &base-api
    build:
      context: ../
      dockerfile: docker/api.Dockerfile
    depends_on:
      - elasticmq
      - minio
    volumes:
      - ..:/src


services:
  minio:
    # https://docs.min.io/docs/minio-docker-quickstart-guide.html
    image: minio/minio
    command: server /minio-data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minio_access_key}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minio_secret_key}
      MINIO_HTTP_TRACE: /minio-data/requests.log
    # we don't have to expose it directly to the host machine for our demo,
    # but it's useful for starting service on the host
    ports: ['${HOST_BIND_MINIO_PORT:-9001}:9000']
    restart: on-failure
    volumes:
      - ./var/minio-data:/minio-data

  elasticmq:
    image: softwaremill/elasticmq
    ports: ['${HOST_BIND_ELASTICMQ_PORT:-9325}:9324']
    volumes: ['./elasticmq.conf:/opt/elasticmq.conf']
    restart: on-failure


  api:
    <<: *base-api
    ports: ['$API_PORT:$API_PORT']
    environment:
      DATABASE_URI: ${DATABASE_URI}
      IGL_SUBSCRIPTIONS_REPO_USE_SSL: 'False'
      IGL_SUBSCRIPTIONS_REPO_HOST: minio
      IGL_SUBSCRIPTIONS_REPO_PORT: 9000
      IGL_SUBSCRIPTIONS_REPO_ACCESS_KEY: minio_access_key
      IGL_SUBSCRIPTIONS_REPO_SECRET_KEY: minio_secret_key
      IGL_NOTIFICATIONS_REPO_USE_SSL: 'False'
      IGL_NOTIFICATIONS_REPO_REGION: elasticmq
      IGL_NOTIFICATIONS_REPO_HOST: elasticmq
      IGL_NOTIFICATIONS_REPO_PORT: 9324
      IGL_NOTIFICATIONS_REPO_ACCESS_KEY: elasticmqaccess
      IGL_NOTIFICATIONS_REPO_SECRET_KEY: elasticmqsecret
      IGL_DELIVERY_OUTBOX_REPO_USE_SSL: 'False'
      IGL_DELIVERY_OUTBOX_REPO_REGION: elasticmq
      IGL_DELIVERY_OUTBOX_REPO_HOST: elasticmq
      IGL_DELIVERY_OUTBOX_REPO_PORT: 9324
      IGL_DELIVERY_OUTBOX_REPO_ACCESS_KEY: elasticmqaccess
      IGL_DELIVERY_OUTBOX_REPO_SECRET_KEY: elasticmqsecret
    #./scripts/wait-for-it.sh $DB_HOST:$CONN_DB_PORT &&
    #command: bash -c "pwd && ls -al"
    command: bash -c "echo $DATABASE_URI && ./scripts/runserver.sh"

  tests:
    <<: *base-api
    container_name: tests
    command: bash -c "cd /src && pytest -o junit_family=xunit1 --junitxml=/src/api/tests/results.xml"
    environment:
      IGL_ALLOW_UNSAFE_REPO_IS_EMPTY: 'True'
      IGL_ALLOW_UNSAFE_REPO_CLEAR: 'True'
      TEST_SUBSCRIPTIONS_REPO_HOST: ${TEST_SUBSCRIPTION_REPO_HOST:-minio}
      TEST_SUBSCRIPTIONS_REPO_PORT: ${TEST_SUBSCRIPTION_REPO_PORT:-9000}
      TEST_SUBSCRIPTIONS_REPO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minio_access_key}
      TEST_SUBSCRIPTIONS_REPO_SECRET_KEY: ${MINIO_SECRET_KEY:-minio_secret_key}
